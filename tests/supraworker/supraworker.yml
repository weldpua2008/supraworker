clientId: "exampleclient"
workers: 10000
api_delay_sec: 1
headers:
  "Content-type": "application/json"

jobs:
  cancelation:
    url: "http://api:8080/api/v1/jobs/fetch_cancel"
    method: post
    params:
      "jobFlowId": "{{ .ClientId}}"
      "limit": 5
  logstream:
    url: "http://api:8080/api/v1/logs/run"
    method: POST
    resend-params:
        - "job_uid"
        - "run_uid"
        - "extra_run_id"
  get:
    url: "http://api:8080/api/v1/jobs/fetch_new"
    method: post
    params:
      "jobFlowId": "{{ .ClientId}}"
      "limit": 500
  run: &run
    url: "http://api:8080/api/v1/jobs/runs"
    method: put
    params:
      "previous_job_status": "PENDING"
      "job_status": "RUNNING"
    resend-params:
        - "job_uid"
        - "run_uid"
        - "extra_run_id"
  finish: &finish
    <<: *run
    params:
      "previous_job_status": "RUNNING"
      "job_status": "SUCCESS"
    resend-params:
        - "job_uid"
        - "run_uid"
        - "extra_run_id"

  failed: &filed
    <<: *run
    params:
      "previous_job_status": "RUNNING"
      "job_status": "FAILED"
    resend-params:
        - "job_uid"
        - "run_uid"
        - "extra_run_id"

  cancel: &cancel
    <<: *run
    params:
      "previous_job_status": "RUNNING"
      "job_status": "CANCELED"
    resend-params:
        - "job_uid"
        - "run_uid"
        - "extra_run_id"

version: 1
